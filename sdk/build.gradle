apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'maven'
apply plugin: 'com.novoda.bintray-release'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions{
        abortOnError false
    }

    compileOptions{
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    api rootProject.ext.dependencies.values()
    //rxjava2
    api "io.reactivex.rxjava2:rxjava:2.2.21"
    api "io.reactivex.rxjava2:rxandroid:2.1.1"
    //rxlifecycle
    api 'com.trello.rxlifecycle3:rxlifecycle:3.0.0'
    api 'com.trello.rxlifecycle3:rxlifecycle-android:3.0.0'
    api 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle:3.0.0'
    api 'com.trello.rxlifecycle3:rxlifecycle-kotlin:3.0.0'
    //retrofit2
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    //okhttp3
    api 'com.squareup.okhttp3:okhttp:4.9.0'
    api 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    //gson
    api 'com.google.code.gson:gson:2.8.6'
    //glide
    api 'com.github.bumptech.glide:glide:4.12.0'
    api 'jp.wasabeef:glide-transformations:4.1.0@aar'
    //ktx
    api 'androidx.activity:activity-ktx:1.2.2'
    api 'androidx.fragment:fragment-ktx:1.3.2'
}

publish {
    userOrg = 'ddnosh'
    groupId = 'com.androidwind'
    artifactId = 'arabbit'
    publishVersion = '4.0.0'
    desc = 'ARabbit is a sdk for faster android app development'
    website = "https://github.com/ddnosh/ARabbit"
}

tasks.withType(Javadoc) {//防止编码问题
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.withType(Javadoc).all {
    enabled = false
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

//打包任务
task makeJar(type: Copy) {
    //删除旧的jar包
    delete 'build/libs/arabbit.jar'
    //从哪里打包class文件
    from('build/intermediates/packaged-classes/debug/')
    //打包到jar后的目录结构
    into('build/libs/')
    //包含的jar包
    include('classes.jar')
    //去掉不需要打包的目录和文件
    exclude('BuildConfig.class', 'R.class')
    //去掉R$开头的文件
    exclude { it.name.startsWith('R$'); }
    //重命名jar包为tinytask
    rename ('classes.jar', 'arabbit.jar')
}

makeJar.dependsOn(build)